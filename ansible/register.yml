- hosts: staging
  vars:
    - username: deploy
    - home_path: "/home/{{ username }}"
    - python_path: "{{ home_path }}/site/venv/bin/python"
    - ansible_python: "{{ home_path }}/ansible_venv/bin/python"
    - ansible_playbook_path: "{{ home_path }}/ansible_venv/bin/ansible-playbook"
    - service_path: "{{ home_path }}/site/services/podlove"
    - service_remove_path: "{{ home_path }}/site/services/podlove_remove"

  tasks:
    - name: "Include secret vars"
      include_vars: secrets.yml

    - name: Create service directory
      file:
        path: "{{ service_path }}"
        state: directory
        owner: "{{ username }}"

    - name: Create service remove directory
      file:
        path: "{{ service_remove_path }}"
        state: directory
        owner: "{{ username }}"

    - name: Copy private variables to deploy
      ansible.builtin.copy:
        src: secrets.yml
        dest: "{{ service_path }}/secrets.yml"
        owner: "{{ username }}"
        mode: "0644"

    - name: Copy private variables to remove
      ansible.builtin.copy:
        src: secrets.yml
        dest: "{{ service_remove_path }}/secrets.yml"
        owner: "{{ username }}"
        mode: "0644"

    - name: Create .vault_password file install
      template:
        src: vault_password.template.j2
        dest: "{{ service_path }}/.vault_password"
        mode: '0600'

    - name: Create .vault_password file remove
      template:
        src: vault_password.template.j2
        dest: "{{ service_remove_path }}/.vault_password"
        mode: '0600'

    - name: Copy service deploy playbook
      ansible.builtin.copy:
        src: playbook.yml
        dest: "{{ service_path }}/playbook.yml"
        owner: "{{ username }}"
        mode: "0644"

    - name: Copy service remove playbook
      ansible.builtin.copy:
        src: playbook_remove.yml
        dest: "{{ service_remove_path }}/playbook.yml"
        owner: "{{ username }}"
        mode: "0644"

    - name: Copy traefik.template.j2
      ansible.builtin.copy:
        src: traefik.template.j2
        dest: "{{ service_path }}/traefik.template.j2"
        owner: "{{ username }}"
        mode: "0644"

    - name: Copy php.ini.j2 template
      ansible.builtin.copy:
        src: php.ini.j2
        dest: "{{ service_path }}/php.ini.j2"
        owner: "{{ username }}"
        mode: "0644"

    - name: Copy wp-config template
      ansible.builtin.copy:
        src: wp-config-sample.php.j2
        dest: "{{ service_path }}/wp-config-sample.php.j2"
        owner: "{{ username }}"
        mode: "0644"

    - name: Copy service deploy config
      ansible.builtin.copy:
        src: config.json
        dest: "{{ service_path }}/config.json"
        owner: "{{ username }}"
        mode: "0400"

    - name: Copy service remove config
      ansible.builtin.copy:
        src: config_remove.json
        dest: "{{ service_remove_path }}/config.json"
        owner: "{{ username }}"
        mode: "0400"

    - name: Copy inventory directory install
      ansible.builtin.copy:
        src: inventory
        dest: "{{ service_path }}"
        owner: "{{ username }}"

    - name: Copy inventory directory remove
      ansible.builtin.copy:
        src: inventory
        dest: "{{ service_remove_path }}"
        owner: "{{ username }}"

    - name: Create service deploy script install
      template:
        src: deploy.py.j2
        dest: "{{ service_path }}/deploy.py"
        owner: "{{ username }}"
        mode: "0500"

    - name: Create service remove script
      template:
        src: deploy.py.j2
        dest: "{{ service_remove_path }}/deploy.py"
        owner: "{{ username }}"
        mode: "0500"

    - name: Create sudoers file for deploy scripts
      template:
        src: sudoers.template.j2
        dest: /etc/sudoers.d/podlove_as_root
        mode: '0440'

    - name: Copy systemd service config
      ansible.builtin.copy:
        src: systemd.service.j2
        dest: "{{ service_path }}/systemd.service.j2"
        owner: "{{ username }}"
        mode: "0400"

    - name: Install PyMySQL into ansible venv
      shell: "{{ ansible_python }} -m pip install --upgrade PyMySQL"
